
#Notes on LAMP stack, DigitalOcean, etc.
These notes are for my reference and memory only.



#Linux Ubuntu 18.04 notable commands--------------------------------------------------------------------------------------

$sudo /** gives the user the administrative power to execute commands **/

$nano /** nano is a text-editor that lets you write in files in ubuntu **/

$touch /** let's you create files following the directory. e.g. if i wanted to create an index/html in /var/www/html,
        I would write $ touch /var/www/html/index.html **/
        
$rm /** is the command to remove FILES via directory path **/     

$rmdir /** is the command to remove DIRECTORIES via directory path **/

$mkdir /** makes a directory **/

$mkdir -p /** Makes directory path with directory **/

$ -q, --quiet
              Don't show informative messages.

$ -m, --maintmode
              Enables  the  maintainer  mode,  that  is  the  program  invocation  is effectuated
              automatically by a maintainer script. This switch should not be used by end users.

$ -p, --purge
              When disabling a module, purge all traces of the module in the internal state  data
              base.



#Apache2 commands-------------------------------------------------------------------------------------------------------- 

___________________________________________________________________________________
|  Starting Apache2                      | Apach2 Syntax check                    |
| $ sudo /etc/init.d/apache2 start       | $ apachectl configtest                 |
| $ sudo service apache2 start           | $ apachectl -t                         |
| $ sudo apachectl -k start              |                                        |
+----------------------------------------+----------------------------------------+
| Restarting Apache2                     | Apache2 Web root                       |
| $ sudo /etc/init.d/apache2 restart     | $ /var/www/html - default              |
| $ sudo service apache2 restart         | $ /var/www/ - New domain location      |
| $ sudo apachectl -k restart            |                                        |
+----------------------------------------+----------------------------------------+
| Stopping Apache2                       | Enable / Disable Virtual Hosts         |
| $ sudo /etc/init.d/apache2 stop        | $ sudo a2ensite xxxx.conf              |
| $ sudo service apache2 stop            | $ sudo a2dissite xxxx.conf             |
| $ sudo apachectl -k stop               |                                        |
+----------------------------------------+----------------------------------------+
| Status Apache2                         | Loaded apache2 Modules                 |
| $ sudo /etc/init.d/apache2 status      | $ apachectl -M                         |
| $ sudo service apache2 status          | $ apache2ctl -M                        |
+----------------------------------------+----------------------------------------+
| Reload Apache                          | Apache2 Config file's                  |
| $ sudo /etc/init.d/apache2 reload      | $ /etc/apache2/apache2.conf            |
| $ sudo service apache2 reload          | $ /etc/apache2/ports.conf              |
| $ sudo apachectl -k reload             | $ /etc/apache2/sites-available/xxx.conf|
+----------------------------------------+----------------------------------------+
| Apache2 Graceful                       | Available apache2 Modules              |
| $ sudo apachectl -k graceful           | $ /usr/lib/apache2/modules/            |
| $ sudo apachectl -k graceful-stop      |                                        |
|                                        +----------------------------------------+
|                                        | Apache2 log file's                     |
|                                        | $ /var/log/apache2/error.log           |
|                                        | $ /var/log/apache2/access.log          |
|________________________________________|________________________________________|



#MySQL commands-----------------------------------------------------------------------------------------------------------

To login (from unix shell) use -h only if needed.
# [mysql dir]/bin/mysql -h hostname -u username -ppassword
To login (from windows)
mysql dir/bin/mysql.exe -h hostname -u username -ppassword

Create a database.
mysql> create database [databasename];

List all databases on the server.
mysql> show databases;

Switch to a database.
mysql> use [db name];

To see all the tables in the db.
mysql> show tables;

To see table's field formats.
mysql> describe [table name];

To delete a db.
mysql> drop database [database name];

To delete a table.
mysql> drop table [table name];

Show all data from a table.
mysql> SELECT * FROM [table name];

To return columns and column information.
mysql> show columns from [table name];

Show particular rows with the given value.
mysql> SELECT * FROM [table name] WHERE [field name] = "value";

Show all records containing the name "Something" AND the phone number '0123456789'.
mysql> SELECT * FROM [table name] WHERE name = "Something" AND phone_number = '0123456789';

Show all records not containing the name "Something" AND the phone number '0123456789' order by the phone_number field.
mysql> SELECT * FROM [table name] WHERE name != "Something" AND phone_number = '0123456789' order by phone_number;

Show all records starting with the letters 'Something' AND the phone number '0123456789'.
mysql> SELECT * FROM [table name] WHERE name like "Something%" AND phone_number = '0123456789';

Show all records starting with letters 'Something' AND the phone number '0123456789' limit to records 1 through 5.
mysql> SELECT * FROM [table name] WHERE name like "Something%" AND phone_number = '0123456789' limit 1,5;

Use a regular expression to find records. Use "REGEXP BINARY" to force case-sensitivity. This finds any record beginning with a.
mysql> SELECT * FROM [table name] WHERE rec RLIKE "^a";

Show unique records.
mysql> SELECT DISTINCT [column name] FROM [table name];

Show selected records sorted in an ascending (asc) or descending (desc).
mysql> SELECT [col1],[col2] FROM [table name] ORDER BY [col2] DESC;

Return number of rows.
mysql> SELECT COUNT(*) FROM [table name];

Sum column.
mysql> SELECT SUM(*) FROM [table name];

Creating a new user. Login as root. Switch to the MySQL db. Make the user. Update privs.
# mysql -u root -p
mysql> use mysql;
mysql> INSERT INTO user (Host,User,Password) VALUES('%','username',PASSWORD('password'));
mysql> flush privileges;

Change a users password from unix shell.
# [mysql dir]/bin/mysqladmin -u username -h hostname -ppassword 'new-password'

Change a users password from MySQL prompt. Login as root. Set the password. Update privileges.
# mysql -u root -p
mysql> SET PASSWORD FOR 'user'@'hostname' = PASSWORD('password');
mysql> flush privileges;

Recover a MySQL root password. Stop the MySQL server process. Start again with no grant tables. Login to MySQL as root. Set new password. Exit MySQL and restart MySQL server.
# /etc/init.d/mysql stop
# mysqld_safe --skip-grant-tables
# mysql -u root
mysql> use mysql;
mysql> update user set password=PASSWORD("newpassword") where User='root';
mysql> flush privileges;
mysql> quit
# /etc/init.d/mysql stop
# /etc/init.d/mysql start

Set a root password if there is no root password.
# mysqladmin -u root password newpassword

Update a root password.
# mysqladmin -u root -p oldpassword newpassword

Allow the user "Someone" to connect to the server from localhost using the password "passwd". Login as root. Switch to the MySQL db. Give privs. Update privs.
# mysql -u root -p
mysql> use mysql;
mysql> grant usage on *.* to Someone@localhost identified by 'passwd';
mysql> flush privileges;

Give user privilages for a db. Login as root. Switch to the MySQL db. Grant privs. Update privs.
# mysql -u root -p
mysql> use mysql;
mysql>INSERT INTO user(Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv)
 VALUES ('%','databasename','username','Y','Y','Y','Y','Y','N');
mysql> flush privileges;

or

mysql> grant all privileges on databasename.* to username@localhost;
mysql> flush privileges;

To update info already in a table.
mysql> UPDATE [table name] SET Select_priv = 'Y',Insert_priv = 'Y',Update_priv = 'Y' where [field name] = 'user';

Delete a row(s) from a table.
mysql> DELETE from [table name] where [field name] = 'fieldvalue';

Update database permissions/privilages.
mysql> flush privileges;

Delete a column.
mysql> alter table [table name] drop column [column name];

Add a new column to db.
mysql> alter table [table name] add column [new column name] varchar (20);

Change column name.
mysql> alter table [table name] change [old column name] [new column name] varchar (50);

Make a unique column so you get no dupes.
mysql> alter table [table name] add unique ([column name]);

Make a column bigger.
mysql> alter table [table name] modify [column name] VARCHAR(3);

Delete unique from table.
mysql> alter table [table name] drop index [colmn name];

Load a CSV file into a table.
mysql> LOAD DATA INFILE '/tmp/filename.csv' replace INTO TABLE [table name] FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' (field1,field2,field3);

Dump all databases for backup. Backup file is sql commands to recreate all db's.
# mysqldump -u username -ppassword --opt > /tmp/alldatabases.sql

Dump one database for backup.
# mysqldump -u username -ppassword --databases databasename > /tmp/databasename.sql

Dump a table from a database.
# mysqldump -u username -ppassword databasename tablename > /tmp/databasename.tablename.sql

Restore database (or database table) from backup.
# mysql -u username -ppassword databasename < /tmp/databasename.sql

Create Table Example 1.
mysql> CREATE TABLE [table name] (name VARCHAR(20));

Create Table Example 2.
mysql> create table [table name] (personid int(50) not null auto_increment primary key,firstname varchar(35),middlename varchar(50),lastnamevarchar(50) default 'somethiing');




#Wordpress Troubleshooting------------------------------------------------------------------------------------------------

Excerpt from discord regarding why wordpress was not showing up on the webserver:


Corey 10/21 at 8:17 PM
> ok
> so think
> we know the order of how things are working right
> tell me
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:24 PM
> so in short, apache talks to the wordpress files while communicating these files back to the web browser.

> The sites-available thing we were talking about deals with the config files for virtual host. 
What im trying to understand about the config file thats messing with my wordpress, 
is that because theres a default file there that apache automatically goes to instead of wordpress?
_________________________________________________________________________________________________________________________

Corey 10/21 at 8:27 PM
> you're going too fast
> break it down please
> the process of how apache works
> in regards to what we did in that droplet that only concerned apache
> break it up
> apache
> it listens to a port on the server
> port 8-
> port 80
> this is common for websites
> when you go to google.com:80
> same shit
> as when u leave it out
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:32 PM
> right thats from setting up the virtual host configuration block which i typed out earlier today
and that specific virtual host config is in the sites-available dir
_________________________________________________________________________________________________________________________

Corey  10/21 at 8:33 PM
> right
> so it's apache, it reads the config file
> and listens to it
> now dig deep
> sites enabled vs sites available
> what's diff
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:35 PM
> sites available is responsible for holding/storing your vhost configs
> sites enabled enables or disables these vhost files by removing the specific reference files
_________________________________________________________________________________________________________________________

Corey  10/21 at 8:37 PM
> yes
> so sites available has everything
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:37 PM
> yes
> Corey  10/21 at 8:37 PM
> sites enabled is what is active
> now
> think about what is happening
> apache is being routed to some wrong place, wherever the fuck
> which means what
> about sites enabled
> ?
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:40 PM
> gimme like 5 min to think lol, i feel like its obvious but something isnt clicking in my head
_________________________________________________________________________________________________________________________

Corey  10/21 at 8:41 PM
> i'm not asking you to solve the problem
> i'm asking questions
> you're thinking too much
> look
> if shit is in my face
> and i smell it
> it's because there's fucking shit in my face
> apache is being routed to the wrong site
> apache doesn't know anything
> it just follows what's in enabled
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:42 PM
> so sites enabled because theres shit in sites available
> Corey  10/21 at 8:42 PM
> so the fuck
> YES
> ok
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:42 PM
> LOL

Corey  10/21 at 8:42 PM
> so what the fuck
> what is cool - what can we do
> we are in debug mode
> trying to fuck with things to see what's going on
> we are stuck here right
> think
> in the process of how apache should work
> we are stuck at the config
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:44 PM
> so we either remove or edit the config file thats rerouting apache
_________________________________________________________________________________________________________________________

Corey  10/21 at 8:47 PM
> yeah
> turn everything off dude
> trn everything the fuck off
> check to make sure everything is off
> then add only your rule for wordpress
> and run it again
> i mean
> that's the plan of attack
> you don't fucking fight in the dark without control or understanding over everything going on
_________________________________________________________________________________________________________________________

jlayog 10/21 at 8:58 PM
> OH MY FUCKING GOD
> IT WORKS
> jesus christ almighty
_________________________________________________________________________________________________________________________

Corey  10/21 at 9:00 PM
> how
_________________________________________________________________________________________________________________________

jlayog 10/21 at 9:01 PM
> cuz i disbaled the other sites
> then
> i realized i was missing a virtual host text in my wordpress
> so i added it
> then boom bam
_________________________________________________________________________________________________________________________

Corey  10/21 at 9:03 PM
>see
> underfuckingstand that shit
> know the fucking process
> understadn it step by step
> control what the fuck is going on
> play around and change settings and add shit blah bla blah
> under conditions where you know what the fuck is goin gon
> i didn't even need to teach you anything
> i just organized everything you already knew
> you KNOW that's exactly what I did
_________________________________________________________________________________________________________________________

jlayog 10/21 at 9:05 PM
> shut up corey i love you


TL;DR: The way apache works is that it will go in order executing the first vhost file it can find. The order of apache2
is from left to right. Meaning if it is listed as: default.conf  default-ssl.conf  mywebsite.conf  wordpress.conf

and you wanted to get wordpress.conf to be enabled, it will execute default.conf first and go down this line, until you 
disable each and everyone of them to get wordpress.conf.

Remember to only edit files in etc/apache2/sites-available/

This is where you will edit vhost files.
You can see which vhost files are active via etc/apache2/sites-available/

vhosts can be enabled via this command: $sudo a2ensite [filename]
vhosts disable: $sudo a2dissite [filename]

[END]
